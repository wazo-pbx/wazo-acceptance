#!/usr/bin/env bash

function usage {
    echo "Usage : $0"
}

echo "Here are the definitions of steps that are unused by feature files."

STEP_NOT_FOUND="1"

function project_root {
    this_script_directory="$(dirname $0)"
    relative_path_to_project_root=".."
    echo "$this_script_directory/$relative_path_to_project_root"
}

ROOT=$(project_root)
STEP_DIR=$(project_root)/xivo_acceptance/steps
FEATURE_DIR=$(project_root)/data/features
FEATURES_CAT=/tmp/xivo-unused-steps-features

find $FEATURE_DIR -name '*.feature' | xargs cat > $FEATURES_CAT

function escape_pattern {
    raw_pattern="$1"
    echo "$raw_pattern" | \
        # reindent line
        sed 's/^\^/^ +/g'
}

function extract_step_pattern {
    step_definition="$1"
    raw_pattern=$(sed "s/.*step(u\?['"\""]\(.*\)['"\""])$/\1/" <<< "$step_definition")
    escaped_pattern=$(escape_pattern "$raw_pattern")
    echo "$escaped_pattern"
}

function pygrep {
    SCRIPT=$(cat <<EOF
import re
import sys

pattern = r'''$1'''
file_name = '''$2'''

file = open(file_name, "r")

for line_num, line in enumerate(file):
    if re.search(pattern, line, re.IGNORECASE):
        print "OK"
        sys.exit(0)
print 'KO'
EOF
          )
    set -e
    result=$(python -c "$SCRIPT")
    set +e
    [ "$result" = "OK" ]
}

function step_is_used {
    step_pattern="$1"
    pygrep "$step_pattern" $FEATURES_CAT
}

function list_step_definitions {
    find $STEP_DIR -name '*.py' | xargs grep -Hn '@step('
}

function remove_used_step_definitions {
    while read -r step_definition
    do
        step_pattern=$(extract_step_pattern "$step_definition")
        if ! step_is_used "$step_pattern" ; then
            echo "$step_definition"
        fi
    done
}

function list_useless_step_definitions {
    list_step_definitions | remove_used_step_definitions
}

list_useless_step_definitions
